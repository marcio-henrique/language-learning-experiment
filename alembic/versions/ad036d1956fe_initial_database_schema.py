"""Initial database schema

Revision ID: ad036d1956fe
Revises: 
Create Date: 2025-05-01 14:30:43.302441

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad036d1956fe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educational_texts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flashcards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('example_sentence', sa.Text(), nullable=True),
    sa.Column('example_translation', sa.Text(), nullable=True),
    sa.Column('question', sa.Text(), nullable=True),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('correct_answer', sa.String(), nullable=True),
    sa.Column('grammar_structure_type', sa.String(), nullable=True),
    sa.Column('grammar_structure_value', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum('MANUAL', 'AUTOMATIC', name='flashcardtype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questionnaires',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('questions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('german_level', sa.String(), nullable=True),
    sa.Column('university_student', sa.String(), nullable=True),
    sa.Column('university', sa.String(), nullable=True),
    sa.Column('university_course', sa.String(), nullable=True),
    sa.Column('university_period', sa.String(), nullable=True),
    sa.Column('group', sa.Enum('A', 'B', name='usergroup'), nullable=False),
    sa.Column('accepted_terms', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('educational_texts_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('educational_text_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['educational_text_id'], ['educational_texts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flashcards_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('flashcard_id', sa.UUID(), nullable=True),
    sa.Column('answer', sa.String(), nullable=True),
    sa.Column('correct_answer', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flashcard_id'], ['flashcards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('timestamp_begin', sa.DateTime(), nullable=False),
    sa.Column('timestamp_end', sa.DateTime(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('screen', sa.String(), nullable=True),
    sa.Column('html_element_id', sa.String(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questionnaires_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('questionnaire_id', sa.UUID(), nullable=True),
    sa.Column('answers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['questionnaire_id'], ['questionnaires.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('questionnaires_user')
    op.drop_table('logs_user')
    op.drop_table('flashcards_user')
    op.drop_table('educational_texts_user')
    op.drop_table('users')
    op.drop_table('questionnaires')
    op.drop_table('flashcards')
    op.drop_table('educational_texts')
    # ### end Alembic commands ###
